{% extends '::ojsbase.html.twig' %}

{% block breadcrumb %}
    {% set list = [
                { 'link': path('dashboard'), 'title': 'dashboard'|trans },
                { 'link': path('board_manager'), 'title': 'board.manager'|trans },
                { 'title': 'board.detail'|trans }
] %}
    {{breadcrumb(list)}}
{% endblock %}

{% block body -%}
    {% include '::flashbag.html.twig' %}
    <h1 title="{{"board.name"|trans}}">{{ entity.name }}</h1>
    <p class="{{"description"|trans}}">{{ entity.description|raw }}</p>
    <br>
    <form action="{{path('board_manager_add_member',{boardId: entity.id})}}" method="POST"
          name="addMemberForm" class="form-inline">
        <span class="help-block">
            {{"You can add member from your journal's users only."|trans|raw}}
            {{"You can <a href='%path%'>manage</a> journal's users."|trans({"%path%":path('manager_journal_users')})|raw}}
        </span>

        <div class="form-group">
            <!-- <label for="userInput">{{"user"|trans}}</label> -->
            <input type="text" class="form-control select2-element-user"
                   style="min-width: 250px"
                   name="userid" id="userInput" placeholder="{{"user"|trans}}">
        </div>
        <button type="submit" class="btn btn-default">{{"add"|trans}}</button>
    </form>
    <hr>
    <h4>Members</h4>
    <table class="table">
        {% for member in members%}
            <tr>
                <td>{{member.user.fullName}} ({{member.user.username}})</td>
                <td><a href="{{path('board_manager_remove_member',{boardId:entity.id, userId: member.user.id})}}">{{"remove"|trans}}</a></td>
            </tr>
        {% endfor %}
    </table>
    {% set back_path = 'board_manager' %}
    {% set edit_path = 'board_manager_edit' %}
    {% set delete_path = 'board_manager_delete' %}
    {% include '::actionbuttons.html.twig' %}
{% endblock %}

{% block javascripts %}
    {{parent()}}
    <script>
        $(document).ready(function () {
            $(".select2-element-user").select2({
                multiple: false,
                createSearchChoice: function (term, data) {
                    if ($(data).filter(function () {
                        return this.text.localeCompare(term) === 0;
                    }).length === 0) {
                        return {id: term, text: term};
                    }
                },
                ajax: {
                    url: "{{path("search_journal_users",{journalId: journal.id})}}", dataType: 'json', type: "GET", delay: 1000,
                    data: function (params) {
                        return {q:  params, apikey: OjsCommon.api.userApikey};
                    },
                    results: function (data) {
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.username + " (" + item.email + ")",
                                    slug: item.username,
                                    id: item.id
                                };
                            })
                        };
                    },
                    cache: true
                },
                minimumInputLength: 3

            });
        });
    </script>
{% endblock%}
