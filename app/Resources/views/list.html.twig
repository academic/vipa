{% extends 'APYDataGridBundle::blocks_js.jquery.html.twig' %}
{% block grid %}
    <div class="grid">
        {% if grid.totalCount > 0 or grid.isFiltered or grid.noDataMessage is sameas(false) %}
            <form id="{{ grid.hash }}" action="{{ grid.routeUrl }}" method="post">
                <div class="grid_header">
                    {% if grid.massActions|length > 0 %}
                        {{ grid_actions(grid) }}
                    {% endif %}
                </div>
                {{ grid_search(grid) }}
                <div class="grid_body">
                    <table class="table table-bordered">
                        {% if grid.isTitleSectionVisible %}
                            {{ grid_titles(grid) }}
                        {% endif %}

                        {{ grid_rows(grid) }}
                    </table>
                </div>
                <div class="grid_footer">
                    {% if grid.isPagerSectionVisible %}
                        {{ grid_pager(grid) }}
                    {% endif %}
                    {% if grid.exports|length > 0 %}
                        {{ grid_exports(grid) }}
                    {% endif %}
                    {% if grid.tweaks|length > 0 %}
                        {{ grid_tweaks(grid) }}
                    {% endif %}
                </div>
                {% if withjs %}
                    {{ grid_scripts(grid) }}
                {% endif %}
            </form>
        {% else %}
            {{ grid_no_data(grid) }}
        {% endif %}
    </div>
{% endblock grid %}
{% block grid_no_data %}<p
        class="alert alert-warning">{{ grid.noDataMessage|default('No data')|trans|raw }}</p>{% endblock grid_no_data %}

{% block grid_column_actions_cell %}
    {% set actions = column.getActionsToRender(row) %}
    <ul class="grid-row-actions">
        {% for action in actions %}
            <li>
                <a href="{{ url(action.route, column.routeParameters(row, action), false) }}"
                   target="{{ action.target }}"{% if action.confirm %}
                   onclick="return confirm('{{ action.confirmMessage }}')"{% endif %}{% for name, value in action.attributes %} {{ name }}="{{ value }}" {% endfor %}
                >{{ action.title|trans|raw }}</a>
            </li>
        {% endfor %}
    </ul>
{% endblock grid_column_actions_cell %}


{% block grid_scripts %}
    <script src="//code.jquery.com/jquery-1.11.2.min.js"></script>
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function () {
            $("#show-filter").on('click', function () {
                $("#filters").fadeToggle();
            });
            $("#search_toggle").on('click',function(){
               $("#search_box").fadeToggle();
            });
        });
    </script>
{% endblock grid_scripts %}

{% block grid_search %}
        <div class="grid-search jumbotron" id="search_box" style="display: none">
            {{ parent() }}
        </div>
        <a class="btn btn-success pull-right" href="#" id="search_toggle"><i class="fa fa-search"></i></a>
{% endblock grid_search %}

{# -------------------------------------------- grid_column_filter_type_input --------------------------------------- #}
{% block grid_column_filter_type_input %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    {{ grid_column_operator(column, grid, op, submitOnChange) }}
    <input type="{{ column.inputType }}" value="{{ from }}" class="form-control grid-filter-input-query-from"
           name="{{ grid.hash }}[{{ column.id }}][from]" id="{{ grid.hash }}__{{ column.id }}__query__from"
           {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }} />
    <input type="{{ column.inputType }}" value="{{ to }}" class="form-control  grid-filter-input-query-to"
           name="{{ grid.hash }}[{{ column.id }}][to]" id="{{ grid.hash }}__{{ column.id }}__query__to"
           {% if submitOnChange is sameas(true) %}onkeypress="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }} />
    </span>
{% endblock grid_column_filter_type_input %}
{# -------------------------------------------- grid_column_filter_type_select --------------------------------------- #}
{% block grid_column_filter_type_select %}
    {% set btwOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTW') %}
    {% set btweOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_BTWE') %}
    {% set isNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNULL') %}
    {% set isNotNullOperator = constant('APY\\DataGridBundle\\Grid\\Column\\Column::OPERATOR_ISNOTNULL') %}
    {% set op = column.data.operator is defined ? column.data.operator : column.defaultOperator %}
    {% set from = column.data.from is defined ? column.data.from : null %}
    {% set to = column.data.to is defined ? column.data.to : null %}
    {% set multiple = column.selectMulti %}
    {% set expanded = column.selectExpanded %}
    {{ grid_column_operator(column, grid, op, submitOnChange) }}
    <span class="grid-filter-select-query">
    {% if expanded %}
        <span class="grid-filter-select-query-from"
              id="{{ grid.hash }}__{{ column.id }}__query__from" {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
        {% for key, value in column.values %}
            <input class="form-control" type="{% if multiple %}checkbox{% else %}radio{% endif %}"
                   name="{{ grid.hash }}[{{ column.id }}][from][]"
                   value="{{ key }}" {% if key in from %}
                checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %}/>
            <label>{{ value }}</label>
        {% endfor %}
        </span>
        <span class="grid-filter-select-query-to"
              id="{{ grid.hash }}__{{ column.id }}__query__to" {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
        {% for key, value in column.values %}
            <span><input class="form-control" type="{% if multiple %}checkbox{% else %}radio{% endif %}"
                         name="{{ grid.hash }}[{{ column.id }}][to]"
                         value="{{ key }}" {% if not to is null and to == key %} checked="checked"{% endif %} {% if submitOnChange is sameas(true) %}onclick="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %}/><label>{{ value }}</label></span>
        {% endfor %}
        </span>
        {% if multiple %}<input type="submit" value="{{ 'Go'|trans }}" />{% endif %}
    {% else %}
        <select{% if multiple %} multiple="multiple"{% endif %} name="{{ grid.hash }}[{{ column.id }}][from][]"
                                                                class=" form-control grid-filter-select-query-from"
                                                                id="{{ grid.hash }}__{{ column.id }}__query__from" {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %} {{ ( op == isNullOperator or op == isNotNullOperator ) ? 'style="display: none;" disabled="disabled"' : '' }}>
            <option value="">&nbsp;</option>
            {% for key, value in column.values %}
                <option value="{{ key }}"{% if key in from %} selected="selected"{% endif %}>{{ value }}</option>
            {% endfor %}
        </select>
        <select name="{{ grid.hash }}[{{ column.id }}][to]" class="form-control grid-filter-select-query-to"
                id="{{ grid.hash }}__{{ column.id }}__query__to"
                {% if submitOnChange is sameas(true) %}onchange="return {{ grid.hash }}_submitForm(event, this.form);"{% endif %} {{ ( op == btwOperator or op == btweOperator ) ? '': 'style="display: none;" disabled="disabled"' }}>
            <option value="">&nbsp;</option>
            {% for key, value in column.values %}
                <option value="{{ key }}"{% if not to is null and to == key %} selected="selected"{% endif %}>{{ value }}</option>
            {% endfor %}
        </select>
        {% if multiple %}<input type="submit" class="btn btn-primary" value="{{ 'Go'|trans }}" />{% endif %}
    {% endif %}
</span>
{% endblock grid_column_filter_type_select %}

{# -------------------------------------------- grid_column_operator --------------------------------------- #}
{% block grid_column_operator %}
    {% if column.operatorsVisible %}
        <span class="grid-filter-operator">
    <select name="{{ grid.hash }}[{{ column.id }}][operator]" class="form-control"
            onchange="{{ grid.hash }}_switchOperator(this, '{{ grid.hash }}__{{ column.id }}__query__'{% if submitOnChange is sameas(false) %}, false{% endif %});">
        {% for operator in column.operators %}
            <option value="{{ operator }}"{% if op == operator %} selected="selected"{% endif %}>{{ operator |trans }}</option>
        {% endfor %}
    </select>
</span>
    {% endif %}
{% endblock grid_column_operator %}