security:
    encoders:
        Ojs\UserBundle\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_AUTHOR: [ROLE_USER]
        ROLE_EDITOR: [ROLE_AUTHOR, ROLE_ALLOWED_TO_SWITCH]
        ROLE_JOURNAL_MANAGER: [ROLE_EDITOR]
        ROLE_ADMIN: [ROLE_EDITOR, ROLE_AUTHOR]
        ROLE_SUPER_ADMIN:  [ROLE_ADMIN]
        ROLE_USER: [ROLE_AUTHOR]
    providers:
        user_db:
            id: ojs.user_provider.username_email
            #entity: {  class: Ojs\UserBundle\Entity\User, property: username }
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_doc:
            pattern: /api/doc
            stateless: true
            security: false
            anonymous: true
        api_home:
            pattern: /api/$
            stateless: true
            security: false
            anonymous: true
        api_analytics:
            pattern: ^/api/analytics
            stateless: true
            security: false
            anonymous: true
        api_mail_template:
            pattern: ^/api/mail_template*
            stateless: true
            security: false
            anonymous: true
        api:
            pattern: ^/api/
            stateless: true
            security: true
            provider: user_db
            anonymous: true
            simple_preauth:
                authenticator: apikey_authenticator

        main:
            switch_user: {parameter: _su}
            pattern: ^/
            anonymous: true
            provider: user_db
            form_login:
                login_path: /login
                check_path: /login_check
                always_use_default_target_path: false
                default_target_path:            /user 
            logout:
                path: /logout
                target: /
#                invalidate_session: false
#                delete_cookies:
#                    a: { path: null, domain: null }
#                    b: { path: null, domain: null }
#                handlers: [some.service.id, another.service.id]
#                success_handler: some.service.id
            remember_me:
                key: df716bb554af3c6f04c34e0c6518253b
                lifetime: 1800
                path: /.*
                domain: ~
            security: true
            anonymous: true
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user_create, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/article, roles: [ROLE_SUPER_ADMIN, ROLE_EDITOR] }
        - { path: ^/admin/journal, roles: [ROLE_SUPER_ADMIN, ROLE_EDITOR,ROLE_JOURNAL_MANAGER] }
        - { path: ^/admin/userjournalrole, roles: [ROLE_SUPER_ADMIN, ROLE_EDITOR,ROLE_JOURNAL_MANAGER] }
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }
        - { path: /manager, roles: ROLE_USER }
        - { path: /user/forgot_password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: /user, roles: ROLE_USER }
        - { path: ^/author, roles: ROLE_AUTHOR }
        - { path: ^/editor, roles: ROLE_EDITOR }
        - { path: ^/api/*, roles: ROLE_USER }
        - { path: ^/suggest, roles: ROLE_USER }
        - { path: /.*, roles: IS_AUTHENTICATED_ANONYMOUSLY }

#jms_security_extra:
#    method_access_control:
#        "JMSJobQueueBundle:.*:.*": "hasRole('ROLE_ADMIN')"